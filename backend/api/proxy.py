"""
–ü—Ä–æ–∫—Å–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Instagram (–æ–±—Ö–æ–¥ 403 Forbidden)
"""
from fastapi import APIRouter, Query
from fastapi.responses import Response
import httpx
from logger import log_error, log_info

router = APIRouter(tags=["Proxy"])

@router.get("/api/proxy/image")
async def proxy_image(url: str = Query(...)):
    """
    –ü—Ä–æ–∫—Å–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Instagram
    –û–±—Ö–æ–¥–∏—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è CORS –∏ 403 Forbidden
    """
    try:
        log_info(f"üîÑ –ü—Ä–æ–∫—Å–∏ –∑–∞–ø—Ä–æ—Å –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {url[:100]}...", "proxy")
        log_info(f"üîç –ü–æ–ª–Ω—ã–π URL: {url}", "proxy")
        
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
            'Referer': 'https://www.instagram.com/',
            'Accept': 'image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8',
            'Accept-Language': 'en-US,en;q=0.9',
            'Accept-Encoding': 'gzip, deflate, br',
            'DNT': '1',
            'Connection': 'keep-alive',
            'Upgrade-Insecure-Requests': '1',
        }
        
        async with httpx.AsyncClient(timeout=30.0, follow_redirects=True) as client:
            response = await client.get(url, headers=headers)
            response.raise_for_status()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∞ –Ω–µ HTML
            content_type = response.headers.get('content-type', '').lower()
            if 'text/html' in content_type:
                log_error(f"‚ùå –ü–æ–ª—É—á–µ–Ω HTML –≤–º–µ—Å—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {content_type}", "proxy")
                return Response(
                    content=b'',
                    status_code=404,
                    media_type='image/png'
                )
            
            log_info(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(response.content)} bytes, —Ç–∏–ø: {content_type}", "proxy")
            
            return Response(
                content=response.content,
                media_type=response.headers.get('content-type', 'image/jpeg'),
                headers={
                    'Cache-Control': 'public, max-age=31536000',
                    'Access-Control-Allow-Origin': '*'
                }
            )
            
    except Exception as e:
        log_error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏: {e}", "proxy")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        return Response(
            content=b'',
            status_code=404,
            media_type='image/png'
        )